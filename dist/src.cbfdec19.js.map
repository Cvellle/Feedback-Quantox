{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/src/constants.ts","webpack://Navigo/src/index.ts","webpack://Navigo/src/utils.ts","webpack://Navigo/src/Q.ts","webpack://Navigo/src/middlewares/setLocationPath.ts","webpack://Navigo/src/middlewares/matchPathToRegisteredRoutes.ts","webpack://Navigo/src/middlewares/checkForDeprecationMethods.ts","webpack://Navigo/src/middlewares/checkForForceOp.ts","webpack://Navigo/src/middlewares/updateBrowserURL.ts","webpack://Navigo/src/middlewares/checkForLeaveHook.ts","webpack://Navigo/src/middlewares/updateState.ts","webpack://Navigo/src/lifecycles.ts","webpack://Navigo/src/middlewares/checkForAlreadyHook.ts","webpack://Navigo/src/middlewares/checkForBeforeHook.ts","webpack://Navigo/src/middlewares/callHandler.ts","webpack://Navigo/src/middlewares/checkForAfterHook.ts","webpack://Navigo/src/middlewares/checkForNotFoundHandler.ts","webpack://Navigo/src/middlewares/errorOut.ts","webpack://Navigo/src/middlewares/flushCurrent.ts","webpack://Navigo/src/middlewares/processMatches.ts","webpack://Navigo/src/middlewares/waitingList.ts","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand","src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","appRoute","resolveOptions","genericHooks","DEFAULT_RESOLVE_OPTIONS","strategy","hash","noMatchWarning","current","routes","destroyed","isPushStateAvailable","pushStateAvailable","isWindowAvailable","windowAvailable","_checkForAHash","url","indexOf","split","composePathWithRoot","path","clean","createRoute","handler","hooks","name","isString","String","accumulateHooks","resolve","to","options","__dirty","undefined","context","instance","currentLocationPath","navigateOptions","Q","setLocationPath","matchPathToRegisteredRoutes","if","matches","length","processMatches","notFoundLifeCycle","waitingList","__waiting","push","navigate","checkForDeprecationMethods","checkForForceOp","updateBrowserURL","updatePageLinks","slice","call","document","querySelectorAll","forEach","link","getAttribute","hasListenerAttached","navigoHandler","e","ctrlKey","metaKey","target","tagName","toLowerCase","location","match","URL","u","pathname","search","err","source","pairs","str","temp","map","v","replace","historyAPIMethod","preventDefault","stopPropagation","addEventListener","removeEventListener","generate","data","route","find","r","result","key","pathToMatchObject","extractGETParameters","queryString","params","parseQuery","hashString","extractHashFromURL","addHook","type","func","getRoute","filter","f","console","warn","nameOrHandler","__freezeListening","on","RegExp","Object","keys","p","uses","as","off","what","navigateByName","destroy","window","__popstateListener","notFound","_notFoundRoute","lastResolved","getLinkPath","matchLocation","currentLocation","annotatePathWithRoot","matchRoute","getCurrentLocation","getCurrentEnvURL","addBeforeHook","bind","addAfterHook","addAlreadyHook","addLeaveHook","_pathToMatchObject","_clean","_setCurrent","c","PARAMETER_REGEXP","WILDCARD_REGEXP","NOT_SURE_REGEXP","fallback","s","pop","tmp","join","query","i","pair","decodeURIComponent","Array","isArray","pattern","GETParams","paramNames","full","dots","regexp","names","reduce","value","index","groups","history","pushState","undefinedOrTrue","obj","h","funcs","done","idx","next","splice","moveForward","force","condition","one","two","isItUsingHash","stateObj","title","setTimeout","href","checkForLeaveHook","oldMatch","_","leaveLoopDone","leave","runHook","newLocationVSOldMatch","d","shouldStop","concat","updateState","foundLifecycle","already","before","after","notFoundRoute","notFoundHandled","notFoundMatch","nextMatch","shift","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","getElementById","innerHTML","router","Navigo","JSON","stringify"],"mappings":"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","file":"src.cbfdec19.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_WILDCARD = \"?(?:.*)\";\nexport const NOT_SURE_REGEXP = /\\/\\?/g;\nexport const REPLACE_NOT_SURE = \"/?([^/]+|)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import {\n  Match,\n  Route,\n  RouteHooks,\n  QContext,\n  NavigateOptions,\n  ResolveOptions,\n} from \"../index\";\nimport NavigoRouter from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  parseNavigateOptions,\n  windowAvailable,\n  getCurrentEnvURL,\n  accumulateHooks,\n  extractHashFromURL,\n} from \"./utils\";\nimport Q from \"./Q\";\nimport setLocationPath from \"./middlewares/setLocationPath\";\nimport matchPathToRegisteredRoutes from \"./middlewares/matchPathToRegisteredRoutes\";\nimport checkForDeprecationMethods from \"./middlewares/checkForDeprecationMethods\";\nimport checkForForceOp from \"./middlewares/checkForForceOp\";\nimport updateBrowserURL from \"./middlewares/updateBrowserURL\";\nimport processMatches from \"./middlewares/processMatches\";\nimport waitingList from \"./middlewares/waitingList\";\n\nimport { notFoundLifeCycle } from \"./lifecycles\";\n\nexport default function Navigo(\n  appRoute?: string,\n  resolveOptions?: ResolveOptions\n) {\n  let DEFAULT_RESOLVE_OPTIONS: ResolveOptions = resolveOptions || {\n    strategy: \"ONE\",\n    hash: false,\n    noMatchWarning: false,\n  };\n  let self: NavigoRouter = this;\n  let root = \"/\";\n  let current: Match[] = null;\n  let routes: Route[] = [];\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = windowAvailable();\n\n  if (!appRoute) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(appRoute);\n  }\n\n  function _checkForAHash(url: string): string {\n    if (url.indexOf(\"#\") >= 0) {\n      if (DEFAULT_RESOLVE_OPTIONS.hash === true) {\n        url = url.split(\"#\")[1] || \"/\";\n      } else {\n        url = url.split(\"#\")[0];\n      }\n    }\n    return url;\n  }\n  function composePathWithRoot(path: string) {\n    return clean(`${root}/${clean(path)}`);\n  }\n  function createRoute(\n    path: string | RegExp,\n    handler: Function,\n    hooks: RouteHooks[],\n    name?: string\n  ): Route {\n    path = isString(path) ? composePathWithRoot(path as string) : path;\n    return {\n      name: name || clean(String(path)),\n      path,\n      handler,\n      hooks: accumulateHooks(hooks),\n    };\n  }\n\n  // public APIs\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, [genericHooks, hooks], name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, [genericHooks, hooks])\n    );\n    return this;\n  }\n  function resolve(to?: string, options?: ResolveOptions): false | Match[] {\n    if (self.__dirty) {\n      self.__waiting.push(() => self.resolve(to, options));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = to ? `${clean(root)}/${clean(to)}` : undefined;\n    // console.log(\"-- resolve --> \" + to, self.__dirty);\n    const context: QContext = {\n      instance: self,\n      to,\n      currentLocationPath: to,\n      navigateOptions: {},\n      resolveOptions: { ...DEFAULT_RESOLVE_OPTIONS, ...options },\n    };\n    Q(\n      [\n        setLocationPath,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n      ],\n      context,\n      waitingList\n    );\n\n    return context.matches ? context.matches : false;\n  }\n  function navigate(to: string, navigateOptions?: NavigateOptions): void {\n    // console.log(\"-- navigate --> \" + to, self.__dirty);\n    if (self.__dirty) {\n      self.__waiting.push(() => self.navigate(to, navigateOptions));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = {\n      instance: self,\n      to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions:\n        navigateOptions && navigateOptions.resolveOptions\n          ? navigateOptions.resolveOptions\n          : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: _checkForAHash(to),\n    };\n    Q(\n      [\n        checkForDeprecationMethods,\n        checkForForceOp,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n        updateBrowserURL,\n        waitingList,\n      ],\n      context,\n      waitingList\n    );\n  }\n  function navigateByName(\n    name: string,\n    data?: Object,\n    options?: NavigateOptions\n  ): boolean {\n    const url = generate(name, data);\n    if (url !== null) {\n      navigate(url, options);\n      return true;\n    }\n    return false;\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        if (!self.__freezeListening) {\n          resolve();\n        }\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    self._notFoundRoute = createRoute(\n      \"*\",\n      handler,\n      [genericHooks, hooks],\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (\n        \"false\" === link.getAttribute(\"data-navigo\") ||\n        \"_blank\" === link.getAttribute(\"target\")\n      ) {\n        if (link.hasListenerAttached) {\n          link.removeEventListener(\"click\", link.navigoHandler);\n        }\n        return;\n      }\n      if (!link.hasListenerAttached) {\n        link.hasListenerAttached = true;\n        link.navigoHandler = function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.navigate(clean(location), options);\n          }\n        };\n        link.addEventListener(\"click\", link.navigoHandler);\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match[] | null {\n    return current;\n  }\n  function generate(name: string, data?: Object): string {\n    const route = routes.find((r) => r.name === name);\n    if (route) {\n      let result = route.path as string;\n      if (data) {\n        for (let key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      return !result.match(/^\\//) ? `/${result}` : result;\n    }\n    return null;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const hashString = extractHashFromURL(path);\n    const route = createRoute(url, () => {}, [genericHooks], url);\n    return {\n      url,\n      queryString,\n      hashString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function getCurrentLocation(): Match {\n    return pathToMatchObject(\n      clean(getCurrentEnvURL(root)).replace(new RegExp(`^${root}`), \"\")\n    );\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match[] {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: path,\n      to: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS,\n    };\n    matchPathToRegisteredRoutes(context, () => {});\n    return context.matches ? context.matches : false;\n  }\n  function directMatchWithLocation(\n    path: string | RegExp,\n    currentLocation?: string,\n    annotatePathWithRoot?: boolean\n  ): false | Match {\n    if (\n      typeof currentLocation !== \"undefined\" &&\n      (typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot)\n    ) {\n      currentLocation = composePathWithRoot(currentLocation);\n    }\n    const context: QContext = {\n      instance: self,\n      to: currentLocation,\n      currentLocationPath: currentLocation,\n    };\n    setLocationPath(context, () => {});\n    if (typeof path === \"string\") {\n      path =\n        typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot\n          ? composePathWithRoot(path)\n          : path;\n    }\n    const match = matchRoute(context, {\n      name: String(path),\n      path,\n      handler: () => {},\n      hooks: {},\n    });\n    return match ? match : false;\n  }\n  function addHook(\n    type: string,\n    route: Route | string,\n    func: Function\n  ): Function {\n    if (typeof route === \"string\") {\n      route = getRoute(route);\n    }\n    if (route) {\n      if (!route.hooks[type]) route.hooks[type] = [];\n      route.hooks[type].push(func);\n      return () => {\n        (route as Route).hooks[type] = (route as Route).hooks[type].filter(\n          (f) => f !== func\n        );\n      };\n    } else {\n      console.warn(`Route doesn't exists: ${route}`);\n    }\n    return () => {};\n  }\n  function getRoute(nameOrHandler: string | Function): Route | undefined {\n    if (typeof nameOrHandler === \"string\") {\n      return routes.find((r) => r.name === composePathWithRoot(nameOrHandler));\n    }\n    return routes.find((r) => r.handler === nameOrHandler);\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n  this.__freezeListening = false;\n  this.__waiting = [];\n  this.__dirty = false;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.navigateByName = navigateByName;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = (url) =>\n    extractGETParameters(_checkForAHash(url));\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this.getCurrentLocation = getCurrentLocation;\n  this.addBeforeHook = addHook.bind(this, \"before\");\n  this.addAfterHook = addHook.bind(this, \"after\");\n  this.addAlreadyHook = addHook.bind(this, \"already\");\n  this.addLeaveHook = addHook.bind(this, \"leave\");\n  this.getRoute = getRoute;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n  this._checkForAHash = _checkForAHash;\n  this._setCurrent = (c) => (current = self.current = c);\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","import {\n  RouteHooksStorage,\n  Match,\n  Route,\n  NavigateOptions,\n  ResolveOptions,\n  QContext,\n  ResolveStrategy,\n} from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n  REPLACE_NOT_SURE,\n  NOT_SURE_REGEXP,\n} from \"./constants\";\n\nexport function getCurrentEnvURL(fallback = \"/\"): string {\n  if (windowAvailable()) {\n    return location.pathname + location.search + location.hash;\n  }\n  return fallback;\n}\nexport function clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function extractHashFromURL(url: string) {\n  if (url && url.indexOf(\"#\") >= 0) {\n    return url.split(\"#\").pop() || \"\";\n  }\n  return \"\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(context: QContext, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(\n    clean(context.currentLocationPath)\n  );\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD)\n        .replace(NOT_SURE_REGEXP, REPLACE_NOT_SURE) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          hashString: extractHashFromURL(context.to),\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.groups\n      ? match.groups\n      : match.slice(1);\n    return {\n      url: clean(current.replace(new RegExp(`^${context.instance.root}`), \"\")),\n      queryString: GETParams,\n      hashString: extractHashFromURL(context.to),\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source?: string): NavigateOptions {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateOptions = {};\n  let resolveOptions: ResolveOptions;\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"resolveOptionsStrategy\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.strategy = temp[1] as ResolveStrategy;\n        break;\n      case \"resolveOptionsHash\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.hash = temp[1] === \"true\";\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n  if (resolveOptions) {\n    options.resolveOptions = resolveOptions;\n  }\n  return options;\n}\nexport function windowAvailable() {\n  return typeof window !== \"undefined\";\n}\nexport function accumulateHooks(\n  hooks = [],\n  result: RouteHooksStorage = {}\n): RouteHooksStorage {\n  hooks\n    .filter((h) => h)\n    .forEach((h) => {\n      [\"before\", \"after\", \"already\", \"leave\"].forEach((type) => {\n        if (h[type]) {\n          if (!result[type]) result[type] = [];\n          result[type].push(h[type]);\n        }\n      });\n    });\n  return result as RouteHooksStorage;\n}\n","type QChild = {\n  type: \"child\";\n  funcs: Array<Function | Array<any> | QChild>;\n};\n\nexport default function Q(\n  funcs: Array<Function | Array<any> | QChild>,\n  c?: any,\n  done?: Function\n) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) {\n      if (done) {\n        done(context);\n      }\n      return;\n    }\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      // console.log(funcs[idx].name);\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        } else if (done) {\n          done(context);\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import { QContext } from \"../../index\";\nimport { getCurrentEnvURL } from \"../utils\";\n\nexport default function setLocationPath(context: QContext, done) {\n  if (typeof context.currentLocationPath === \"undefined\") {\n    context.currentLocationPath = context.to = getCurrentEnvURL(\n      context.instance.root\n    );\n  }\n  context.currentLocationPath = context.instance._checkForAHash(\n    context.currentLocationPath\n  );\n  done();\n}\n","import { matchRoute } from \"../utils\";\nimport { QContext, Match } from \"../../index\";\n\nexport default function matchPathToRegisteredRoutes(context: QContext, done) {\n  for (let i = 0; i < context.instance.routes.length; i++) {\n    const route = context.instance.routes[i];\n    const match: false | Match = matchRoute(context, route);\n    if (match) {\n      if (!context.matches) context.matches = [];\n      context.matches.push(match);\n      if (context.resolveOptions.strategy === \"ONE\") {\n        done();\n        return;\n      }\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForDeprecationMethods(context: QContext, done) {\n  if (context.navigateOptions) {\n    if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n      console.warn(\n        `\"shouldResolve\" is deprecated. Please check the documentation.`\n      );\n    }\n    if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n      console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForForceOp(context: QContext, done) {\n  if (context.navigateOptions.force === true) {\n    context.instance._setCurrent([\n      context.instance._pathToMatchObject(context.to),\n    ]);\n    done(false);\n  } else {\n    done();\n  }\n}\n","import { undefinedOrTrue, pushStateAvailable, windowAvailable } from \"../utils\";\nimport { QContext } from \"../../index\";\n\nconst isWindowAvailable = windowAvailable();\nconst isPushStateAvailable = pushStateAvailable();\n\nexport default function updateBrowserURL(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n    const value = `/${context.to}`.replace(/\\/\\//g, \"/\"); // making sure that we don't have two slashes\n    const isItUsingHash =\n      isWindowAvailable &&\n      context.resolveOptions &&\n      context.resolveOptions.hash === true;\n    if (isPushStateAvailable) {\n      history[context.navigateOptions.historyAPIMethod || \"pushState\"](\n        context.navigateOptions.stateObj || {},\n        context.navigateOptions.title || \"\",\n        isItUsingHash ? `#${value}` : value\n      );\n      // This is to solve a nasty bug where the page doesn't scroll to the anchor.\n      // We set a microtask to update the hash only.\n      if (location && location.hash) {\n        context.instance.__freezeListening = true;\n        setTimeout(() => {\n          let tmp = location.hash;\n          location.hash = \"\";\n          location.hash = tmp;\n          context.instance.__freezeListening = false;\n        }, 1);\n      }\n    } else if (isWindowAvailable) {\n      window.location.href = context.to;\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForLeaveHook(context: QContext, done) {\n  const instance = context.instance;\n  if (!instance.lastResolved()) {\n    done();\n    return;\n  }\n  Q(\n    instance.lastResolved().map((oldMatch) => {\n      return (_, leaveLoopDone) => {\n        // no leave hook\n        if (!oldMatch.route.hooks || !oldMatch.route.hooks.leave) {\n          leaveLoopDone();\n          return;\n        }\n        let runHook = false;\n        const newLocationVSOldMatch = context.instance.matchLocation(\n          oldMatch.route.path,\n          context.currentLocationPath,\n          false\n        );\n        if (oldMatch.route.path !== \"*\") {\n          runHook = !newLocationVSOldMatch;\n        } else {\n          const someOfTheLastOnesMatch = context.matches\n            ? context.matches.find((match) => {\n                return oldMatch.route.path === match.route.path;\n              })\n            : false;\n          runHook = !someOfTheLastOnesMatch;\n        }\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\") && runHook) {\n          Q(\n            oldMatch.route.hooks.leave\n              .map((f) => {\n                // just so we match the Q interface\n                return (_, d) =>\n                  f(\n                    (shouldStop) => {\n                      if (shouldStop === false) {\n                        context.instance.__dirty = false;\n                      } else {\n                        d();\n                      }\n                    },\n                    context.matches && context.matches.length > 0\n                      ? context.matches.length === 1\n                        ? context.matches[0]\n                        : context.matches\n                      : undefined\n                  );\n              })\n              .concat([() => leaveLoopDone()])\n          );\n          return;\n        } else {\n          leaveLoopDone();\n        }\n      };\n    }),\n    {},\n    () => done()\n  );\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function updateState(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n    context.instance._setCurrent(context.matches);\n  }\n  done();\n}\n","import { QContext } from \"../index\";\nimport Q from \"./Q\";\nimport checkForLeaveHook from \"./middlewares/checkForLeaveHook\";\nimport checkForBeforeHook from \"./middlewares/checkForBeforeHook\";\nimport callHandler from \"./middlewares/callHandler\";\nimport checkForAfterHook from \"./middlewares/checkForAfterHook\";\nimport checkForAlreadyHook from \"./middlewares/checkForAlreadyHook\";\nimport checkForNotFoundHandler from \"./middlewares/checkForNotFoundHandler\";\nimport errorOut from \"./middlewares/errorOut\";\nimport flushCurrent from \"./middlewares/flushCurrent\";\nimport updateState from \"./middlewares/updateState\";\n\nexport const foundLifecycle = [\n  checkForAlreadyHook,\n  checkForBeforeHook,\n  callHandler,\n  checkForAfterHook,\n];\n\nexport const notFoundLifeCycle = [\n  checkForLeaveHook,\n  checkForNotFoundHandler,\n  Q.if(\n    ({ notFoundHandled }: QContext) => notFoundHandled,\n    foundLifecycle.concat([updateState]),\n    [errorOut, flushCurrent]\n  ),\n];\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAlreadyHook(context: QContext, done) {\n  const current = context.instance.lastResolved();\n  if (\n    current &&\n    current[0] &&\n    current[0].route === context.match.route &&\n    current[0].url === context.match.url &&\n    current[0].queryString === context.match.queryString\n  ) {\n    current.forEach((c) => {\n      if (c.route.hooks && c.route.hooks.already) {\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n          c.route.hooks.already.forEach((f) => f(context.match));\n        }\n      }\n    });\n    done(false);\n    return;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForBeforeHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.before &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    Q(\n      context.match.route.hooks.before\n        .map((f) => {\n          // just so we match the Q interface\n          return function beforeHookInternal(_, d) {\n            return f((shouldStop) => {\n              if (shouldStop === false) {\n                context.instance.__dirty = false;\n              } else {\n                d();\n              }\n            }, context.match);\n          };\n        })\n        .concat([() => done()])\n    );\n  } else {\n    done();\n  }\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n    context.match.route.handler(context.match);\n  }\n  context.instance.updatePageLinks();\n  done();\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAfterHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.after &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    context.match.route.hooks.after.forEach((f) => f(context.match));\n  }\n  done();\n}\n","import { QContext, Match } from \"../../index\";\nimport {\n  parseQuery,\n  extractGETParameters,\n  clean,\n  extractHashFromURL,\n} from \"../utils\";\n\nexport default function checkForNotFoundHandler(context: QContext, done) {\n  const notFoundRoute = context.instance._notFoundRoute;\n  if (notFoundRoute) {\n    context.notFoundHandled = true;\n    const [url, queryString] = extractGETParameters(\n      context.currentLocationPath\n    );\n    const hashString = extractHashFromURL(context.to);\n    notFoundRoute.path = clean(url);\n    const notFoundMatch: Match = {\n      url: notFoundRoute.path,\n      queryString,\n      hashString,\n      data: null,\n      route: notFoundRoute,\n      params: queryString !== \"\" ? parseQuery(queryString) : null,\n    };\n    context.matches = [notFoundMatch];\n    context.match = notFoundMatch;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function errorOut(context: QContext, done) {\n  if (\n    !context.resolveOptions ||\n    context.resolveOptions.noMatchWarning === false ||\n    typeof context.resolveOptions.noMatchWarning === \"undefined\"\n  )\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function flushCurrent(context: QContext, done) {\n  context.instance._setCurrent(null);\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { foundLifecycle } from \"../lifecycles\";\nimport updateState from \"./updateState\";\nimport checkForLeaveHook from \"./checkForLeaveHook\";\n\nexport default function processMatches(context: QContext, done) {\n  let idx = 0;\n  function nextMatch() {\n    if (idx === context.matches.length) {\n      updateState(context, done);\n      return;\n    }\n    Q(\n      foundLifecycle,\n      { ...context, match: context.matches[idx] },\n      function end() {\n        idx += 1;\n        nextMatch();\n      }\n    );\n  }\n  checkForLeaveHook(context, nextMatch);\n}\n","import { QContext } from \"../../index\";\n\nexport default function waitingList(context: QContext) {\n  context.instance.__dirty = false;\n  if (context.instance.__waiting.length > 0) {\n    context.instance.__waiting.shift()();\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(407);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","import Navigo from \"navigo\";\nimport \"./styles.css\";\n\ndocument.getElementById(\n  \"app\"\n).innerHTML = `<a href=\"/user/xxx/save?foo=bar#anchor-here\" data-navigo>click me</a>`;\n\nconst router = new Navigo(\"/\");\n\nrouter.on(\"/user/:id/:action\", function (match) {\n  document.getElementById(\"app\").innerHTML = `<pre>${JSON.stringify(\n    match,\n    null,\n    2\n  )}</pre>`;\n});\n"]}